#include <stdio.h>
#include <math.h>
#include <stdlib.h>
typedef struct triangle  triangle;
struct triangle
{
    float x,y;
};
typedef struct point  point;
struct point
{
    float x,y;
};
typedef struct Rectangle Rectangle;
struct Rectangle
{
    float x,y;
};
typedef struct circle circle;
struct circle
{
    float xcenter,ycenter,diameter;
};

void segment_center(float x1,float y1,float x2,float y2)
{
    float xcenter,ycenter;
    // calculate the paramaters of center point
    xcenter=(x1+x2)/2;
    ycenter=(y1+y2)/2;
    // print the paramaters of center point
    printf("\nThe paramaters of center point : (%.2f,%.2f)",xcenter,ycenter);
}
void segment_Length()
{
    point p1,p2;//declared two point
    // Enter parameters
    printf("POINT PART : Give me a two point XwY  : ");
    scanf(" %fw%f & %fw%f",&p1.x,&p1.y,&p2.x,&p2.y);
    // length calculation
    float length;
    length = sqrt((p2.x-p1.x)*(p2.x-p1.x)+(p2.y-p1.y)*(p2.y-p1.y));
    // print the length
    printf("The length is : %.2f",length);
    //calculates the paramaters of the centrer point
    segment_center(p1.x,p1.y,p2.x,p2.y);

}
void parallel_lines()
{
    point p1,p2,p3,p4;//declared point
    // enter the paramatres of points
    printf("\nGive me a 4 point XwY  : ");
    scanf(" %fw%f & %fw%f & %fw%f & %fw%f", &p1.x, &p1.y, &p2.x, &p2.y, &p3.x, &p3.y, &p4.x, &p4.y);
    //if y2-y1 == y4-y3 == A when A is Orientation coefficient of ligne  then lignes are parallel
    if ( abs(p2.y-p1.y) == abs(p4.y-p3.y) ) puts("The 2 lines are parallel");
    else  puts("The 2 lines are not parallel");
}
void triangle_type(float length1_2,float length1_3,float  length2_3 )
{
    if(length1_2==length1_2 && length1_3==length2_3  ) puts("This is Equilateral triangle");
    else if(length1_2!=length1_3 && length1_2!= length2_3 && length2_3!=length1_3 ) puts("This is scalane triangle");
    else   puts("This is isosceles triangle");
}
void triangle_surface(float length1_2,float length1_3,float length2_3)
{
    float surface;
    // Finding the base and height and calculating the area of the triangle
    if(length1_2<length2_3 && length1_3<length2_3) surface =(length1_2 * length1_3)/2;
    else if (length1_2<length2_3 && length1_3>length2_3) surface=(length1_2 * length2_3)/2;
    else surface =(length2_3 * length1_3)/2;
    // print surface value
    printf("\nThe surface is : %f\n",surface);
    triangle_type(length1_2,length1_3,length2_3);
}
void triangle_perimeter()
{
    triangle p1,p2,p3;//declared triangle point
    // enter the paramaters of  triangle points
    printf("\nTRIANGLE PART : Give me 3 point XwY : ");
    scanf(" %fw%f & %fw%f & %fw%f", &p1.x, &p1.y, &p2.x, &p2.y, &p3.x, &p3.y);
    // perimeter calculate
    float length1_2=sqrt((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y));
    float length1_3=sqrt((p1.x-p3.x)*(p1.x-p3.x)+(p1.y-p3.y)*(p1.y-p3.y));
    float length2_3=sqrt((p3.x-p2.x)*(p3.x-p2.x)+(p3.y-p2.y)*(p3.y-p2.y));
    // print value of the triangle perimeter
    printf("\nThe perimeter is : %f ",length1_2+length1_3+length2_3);
    // calculates the surface of a triangle
    triangle_surface(length1_2,length1_3,length2_3);

}
void is_square(length1_2,length2_3,length3_4)
{
    if(length1_2==length2_3 && length1_2==length3_4 ) puts ("\nThis is a square ");
}
void  rectangle_type(float x1,float y1,float x2,float y2,float x3,float y3,float x4,float y4,float length1_2,float length2_3,float length3_4)
{
    if ( abs(y2-y1) == abs(y4-y3) && abs(y4-y1) == abs(y2-y3) )
    {
        if (!(length1_2  == length2_3) || !(length1_2  == length3_4)  ) printf("\nRectangle defined by (%f,%f) and (%f,%f) and (%f,%f) and (%f,%f) is a rectangle",x1,y1,x2,y2,x3,y3,x4,y4);
        else printf("\nRectangle defined by (%.2,%.2f) and (%.2f,%f) and (%.2f,%.2f) and (%.2f,%.2f)) is a square",x1,y1,x2,y2,x3,y3,x4,y4);
    }
}
void rectangle_surface(float length1_2,float length2_3,float length3_4,float length4_1)
{
    //calculate and print rectangle surface value
    if (!(length1_2  == length2_3)) printf("\nThe surface is : %f",length1_2*length2_3);
    else if (!(length1_2  == length3_4))  printf("\nThe surface is : %f",length1_2*length3_4);
}
void rectangle_perimeter()
{
    Rectangle p1,p2,p3,p4;
    printf("\nRECTANGLE PART : Give me 4 point : ");
    scanf(" %fw%f & %fw%f & %fw%f & %fw%f",&p1.x,&p1.y,&p2.x,&p2.y,&p3.x,&p3.y,&p4.x,&p4.y);
    //calculate and print rectangle perimater value
    float length1_2=sqrt((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y));
    float length2_3=sqrt((p3.x-p2.x)*(p3.x-p2.x)+(p3.y-p2.y)*(p3.y-p2.y));
    float length3_4=sqrt((p4.x-p3.x)*(p4.x-p3.x)+(p4.y-p3.y)*(p4.y-p3.y));
    float length4_1=sqrt((p1.x-p4.x)*(p1.x-p4.x)+(p1.y-p4.y)*(p1.y-p4.y));
    if ( abs(p2.y-p1.y) == abs(p4.y-p3.y) && abs(p4.y-p1.y) == abs(p2.y-p3.y) )
    {
        printf("\nThe perimeter is : %.2f ",length1_2+length2_3+length3_4+length4_1);
        //The function calculates the surface and prints it
        rectangle_surface(length1_2,length2_3,length3_4,length4_1);
    }
    else    is_square(length1_2,length2_3,length3_4,length4_1);   //The function checks if it is a square
    rectangle_type(p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y,length1_2,length2_3,length3_4); //the function printsits-type
}
void inside_circle(float xo,float yo,float diameter,float perimeter)
{
    float xp,yp;
    printf("\nGive me parameters of anypoint for check if inside circle or not : ");
    scanf(" %fw%f",&xp,&yp);
    if (sqrt((xo-xp)*(xo-xp)+(yo-yp)*(yo-yp))<=diameter) printf("Point defined by (%.2f,%.2f) is inside the Circle defined by (%.2f,%.2f) and a perimeter of %.2f",xp,yp,xo,yo,perimeter);
    else printf("Point defined by (%.2f,%.2f) is not inside the Circle defined by (%.2f,%.2f) and a perimeter of %.2f",xp,yp,xo,yo,perimeter);
}
#define PI 3.141
void circle_surface(float diameter)
{
    printf("\nThe srface is : %.2f",(diameter/2)*(diameter/2)*PI);
}
void Circle_perimeter()
{
    circle c;//declared circle C
    printf("\n\nCIRCLE PART : Give me paramaters of Circle center XwY ex : 12w32  ::>  ");
    scanf(" %fw%f",&c.xcenter,&c.ycenter);
    printf("\nGive me diameter of circle : ");
    scanf(" %f",&c.diameter);
    //calculate and print circle perimeter value
    printf("\nThe perimeter is : %.2f",c.diameter*PI);
    circle_surface (c.diameter);
    inside_circle(c.xcenter,c.ycenter,c.diameter,c.diameter*PI);
}
int main ()
{
    puts("\Welcome to my program *-* my name is RABAH_AOUAMEUR -:- ");
    puts("For example, if you want to enter parameter of point  : 1w2 or If you want to enter the coordinates of more than one point : 1w2 & 3w4 & 5w6 .... ");
    puts("Don't spoil my program (:\n"); //ðŸ˜‚ðŸ˜‚ðŸ˜‚
    //point part
    //calculates the length between two points and the paramatres of the centrer point ðŸ˜… :
    segment_Length();
    //checks if two lines are parallel :
    parallel_lines();
    //triangle part :
    triangle_perimeter();
    //Rectangle part :
    rectangle_perimeter();
    //circle part :
    Circle_perimeter();
    return 0;
}
